#include<iostream>
#include<random>
using namespace std;


void MERGE(int a[], int p, int q, int r)
{
	int x, y; 
	x = (q - p) + 1;
	y = r - q;
	int la[x + 1] = { 0 };
	int sa[y + 1] = { 0 };

	for (int i = 1; i < x; i++)
	{
		la[i] = a[p + i - 1];
	}
	for (int j = 1; j < y; j++)
	{
		sa[j] = a[q + j];
	}
	la[x + 1] = 10000;
	sa[y + 1] = 10000;
	int i = 1;
	int j = 1;
	int k;
	for (k = p; k <= r; k++)
	{
		if (la[i] <= sa[j])
		{
			a[k] = la[i];
			i = i + 1;
		}
		else
		{
			a[k] = sa[j];
			j = j + 1;
		}
	}
}

void MERGESORT(int a[], int p, int r)
{
	if (p < r)
	{
		int q = [(p + r) >> 1];
		MERGESORT(a, p, q);
		MERGESORT(a, q + 1, r);
		MERGE(a, p, q, r);
	}
	else
	{

	}
}
int main()
{
	int n;

	cout << "Enter the number of integers(between 1 and 50)";
	cin >> n;
	int a[50];
	if (n > 50)
	{
		cout << "Entered number is invalid";
		return  0;
	}
	std::random_device rd;  //Will be used to obtain a seed for the random number engine
	std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
	std::uniform_int_distribution<> dis(1, 100);

	for (int i = 0; i < n; ++i)
	{//Use dis to transform the random unsigned int generated by gen into an int in [1, 6]
		a[i] = dis(gen);
	}
	cout << "Before Sorting" << "\n";
	for (int i = 0; i < n; ++i)
	{
		cout << a[i] << "," << endl;
	}
	cout << " addr of aa is " << a << endl;
	MERGESORT(a, 0, n - 1);
	cout << "After Sorting" << "\n";
	for (int i = 0; i < n; ++i)
	{
		cout << a[i] << "," << endl;
	}
	return 0;
}
